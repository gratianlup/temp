{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"flame-graph-panel.html","title":"Flame Graph panel","text":"<p>The Flame Graph panel </p> Flame graphs <p>A flame graph is an alternative, more compact way of viewing a call tree. In this view, function instances are nodes with a size proportional to the time spent relative to the parent (caller) function and makes it easier to identify the portions of the app that take most of the time.  </p> <p>Nodes are sorted in the horizontal direction based on decreasing time relative to their parent node, while the ordering in the vertical direction forms a stack trace (a path in the call tree).</p> <p>The following links provide an introduction to the flame graph visualization concept, its history, and how it's being used across the industry for performance investigations.  </p> <ul> <li>CPU Flame Graphs (brendangregg.com)</li> <li>Visualizing Performance - The Developers\u2019 Guide to Flame Graphs (youtube.com)</li> </ul>"},{"location":"flame-graph-panel.html#toolbar-buttons","title":"Toolbar buttons","text":""},{"location":"intro.html","title":"Introduction","text":"<ul> <li>What's the app</li> <li>Advantages, how it ocmpares to others</li> <li>Features</li> <li>Download location (github release)</li> <li>Auto-update</li> </ul> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"}]}